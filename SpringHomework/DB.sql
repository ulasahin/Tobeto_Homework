-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.adresses
(
    id integer NOT NULL,
    name character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT adresses_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.categories
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    status character varying COLLATE pg_catalog."default" NOT NULL,
    category_name character varying COLLATE pg_catalog."default",
    CONSTRAINT categories_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.cities
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name character varying COLLATE pg_catalog."default" NOT NULL,
    country_id integer,
    CONSTRAINT cities_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.countries
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name character varying COLLATE pg_catalog."default" NOT NULL,
    code integer NOT NULL,
    CONSTRAINT countries_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.districts
(
    id integer NOT NULL,
    name character varying COLLATE pg_catalog."default" NOT NULL,
    city_id integer,
    CONSTRAINT districts_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."orderStatus"
(
    id integer NOT NULL,
    picture1 character varying COLLATE pg_catalog."default" NOT NULL,
    picture2 character varying COLLATE pg_catalog."default" NOT NULL,
    picture3 character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "orderStatus_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.orders
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "paymentDate" double precision NOT NULL,
    amount double precision NOT NULL,
    "paymentMethodId" integer NOT NULL,
    "orderStatus" integer NOT NULL,
    CONSTRAINT orders_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."paymentMethods"
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name character varying COLLATE pg_catalog."default",
    CONSTRAINT "paymentMethods_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."productComments"
(
    id integer NOT NULL,
    "userId" integer NOT NULL,
    "productID" integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    CONSTRAINT "productComments_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.products
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    category_id integer NOT NULL,
    code character varying COLLATE pg_catalog."default" NOT NULL,
    price character varying COLLATE pg_catalog."default" NOT NULL,
    description character varying COLLATE pg_catalog."default" NOT NULL,
    date character varying COLLATE pg_catalog."default" NOT NULL,
    product_name character varying COLLATE pg_catalog."default",
    CONSTRAINT products_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.products_stocks
(
    id integer NOT NULL,
    product_id integer NOT NULL,
    quantity character varying COLLATE pg_catalog."default" NOT NULL,
    adresses character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT products_stocks_pkey PRIMARY KEY (product_id)
);

CREATE TABLE IF NOT EXISTS public.user_adresses
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "userId" integer NOT NULL,
    "addressId" integer NOT NULL,
    CONSTRAINT user_adresses_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.users
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "fullName" character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT users_pkey PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS public.cities
    ADD CONSTRAINT fk_country_id FOREIGN KEY (country_id)
    REFERENCES public.countries (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.countries
    ADD CONSTRAINT "FK_COUNTRIES_CITIES" FOREIGN KEY (id)
    REFERENCES public.countries (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS countries_pkey
    ON public.countries(id);


ALTER TABLE IF EXISTS public.districts
    ADD CONSTRAINT fk_city_id FOREIGN KEY (city_id)
    REFERENCES public.cities (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.orders
    ADD CONSTRAINT "FK_ORDER_ORDERSTATUS" FOREIGN KEY (id)
    REFERENCES public."orderStatus" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS orders_pkey
    ON public.orders(id);


ALTER TABLE IF EXISTS public.orders
    ADD CONSTRAINT "FK_ORDER_PAYMENTMETHODS" FOREIGN KEY ("paymentMethodId")
    REFERENCES public."paymentMethods" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."productComments"
    ADD CONSTRAINT "FK_PROCOMMENT_PRODUCTS" FOREIGN KEY ("productID")
    REFERENCES public.products (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."productComments"
    ADD CONSTRAINT "FK_PROCOMMENT_USERS" FOREIGN KEY ("userId")
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.products
    ADD CONSTRAINT "FK_products_categories" FOREIGN KEY (category_id)
    REFERENCES public.categories (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.products_stocks
    ADD CONSTRAINT products_stocks_product_id_fkey FOREIGN KEY (product_id)
    REFERENCES public.products (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS products_stocks_pkey
    ON public.products_stocks(product_id);


ALTER TABLE IF EXISTS public.user_adresses
    ADD CONSTRAINT "FK_USERADRESSES_ADRESSES" FOREIGN KEY ("addressId")
    REFERENCES public.adresses (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.user_adresses
    ADD CONSTRAINT "FK_USERADRESSES_USERS" FOREIGN KEY ("userId")
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.users
    ADD CONSTRAINT "FK_USERS_PROCOMMENTS" FOREIGN KEY (id)
    REFERENCES public."productComments" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS users_pkey
    ON public.users(id);

END;